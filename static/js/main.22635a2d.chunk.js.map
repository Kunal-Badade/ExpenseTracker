{"version":3,"sources":["components/Header.js","context/AppReducer.js","context/GlobalState.js","components/Transaction.js","components/Balance.js","components/IncomeExpenses.js","components/TransactionList.js","components/AddTransaction.js","App.js","reportWebVitals.js","index.js"],"names":["Header","state","action","type","transactions","filter","transaction","id","payload","initialState","GlobalContext","createContext","GlobalProvider","children","useReducer","AppReducer","dispatch","Provider","value","deleteTransaction","addTransaction","Transaction","useContext","sign","amount","className","text","Math","abs","onClick","class","Balance","total","map","reduce","acc","item","toFixed","IncomeExpenses","amounts","income","expense","TransactionList","AddTransaction","useState","setText","setAmount","onSubmit","e","preventDefault","newTransaction","floor","random","htmlfor","onChange","target","placeholder","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.22635a2d.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport const Header = () => {\r\n    return (\r\n        <h2>\r\n            Expense Tracker\r\n        </h2>\r\n    )\r\n}\r\n","export default (state, action) => {\r\n    switch(action.type) {\r\n        case 'DELETE_TRANSACTION':\r\n            return {\r\n                ...state,\r\n                transactions: state.transactions.filter(transaction => transaction.id !==\r\n                    action.payload)\r\n            }\r\n\r\n        case 'ADD_TRANSACTION':\r\n            return {\r\n                ...state,\r\n                transactions: [action.payload, ...state.transactions]\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import React, { createContext, useReducer} from 'react';\r\nimport AppReducer from './AppReducer';\r\n\r\nconst initialState = {\r\n    transactions: []\r\n}\r\n\r\n//Create Context\r\nexport const GlobalContext = createContext(initialState);\r\n\r\n\r\n// Provider Component\r\nexport const GlobalProvider = ({ children  }) => {\r\n    const [state, dispatch] = useReducer(AppReducer, initialState);\r\n\r\n\r\n    function deleteTransaction(id) {\r\n        dispatch({\r\n            type:'DELETE_TRANSACTION',\r\n            payload: id\r\n        });\r\n    }\r\n    function addTransaction(transaction) {\r\n        dispatch({\r\n            type:'ADD_TRANSACTION',\r\n            payload: transaction\r\n        });\r\n    }\r\n    return (<GlobalContext.Provider value={{\r\n        transactions: state.transactions,\r\n        deleteTransaction,\r\n        addTransaction\r\n    }}>\r\n        {children}\r\n    </GlobalContext.Provider>)\r\n}","import React,{useContext} from 'react';\r\nimport { GlobalContext } from '../context/GlobalState';\r\n\r\nexport const Transaction = ({transaction}) => {\r\n    const { deleteTransaction} = useContext(GlobalContext);\r\n    const sign = transaction.amount < 0 ? '-' : '+';\r\n\r\n    return (\r\n        <li className={transaction.amount < 0 ? 'minus' : 'plus'}>\r\n        {transaction.text} <span>{sign}${Math.abs(transaction.amount)}</span>\r\n        <button onClick={() => deleteTransaction(transaction.id)} class=\"delete-btn\">X</button>\r\n        </li>\r\n    )\r\n}\r\n","import React, {useContext} from 'react';\r\nimport { GlobalContext } from '../context/GlobalState';\r\nimport { Transaction } from './Transaction';\r\n\r\n\r\nexport const Balance = () => {\r\n    const {transactions} = useContext(GlobalContext);\r\n    const amounts = transactions.map(transaction => transaction.amount);\r\n    const total = amounts.reduce ((acc, item) => (acc += item), 0).toFixed(2);\r\n    return (\r\n        <>\r\n            <h4>Your Balance</h4>\r\n            <h1>${total}</h1>\r\n        </>\r\n    )\r\n}\r\n","import React,{useContext} from 'react';\r\nimport { GlobalContext } from '../context/GlobalState';\r\n\r\n\r\nexport const IncomeExpenses = () => {\r\n    const {transactions} = useContext(GlobalContext);\r\n    const amounts = transactions.map(transaction => transaction.amount);\r\n    const income = amounts\r\n    .filter(item => item > 0)\r\n    .reduce((acc, item) => (acc += item), 0)\r\n    .toFixed(2);\r\n\r\n    const expense = (\r\n        amounts.filter(item => item < 0).reduce((acc, item) => (acc += item),0) *\r\n        -1\r\n    ).toFixed(2);\r\n    return (\r\n        <div className=\"inc-exp-container\">\r\n            <div>\r\n                <h4>Income</h4>\r\n                <p className=\"money plus\">{income}</p>\r\n            </div>\r\n            <div>\r\n                <h4>Expense</h4>\r\n                <p className=\"money minus\">{expense}</p>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React, { useContext } from 'react';\r\nimport { GlobalContext } from '../context/GlobalState';\r\nimport { Transaction } from './Transaction';\r\n\r\nexport const TransactionList = () => {\r\n    const { transactions } = useContext(GlobalContext);\r\n    \r\n    return (\r\n        <div>\r\n            <h3>History</h3>\r\n            <ul  className=\"list\">\r\n            {transactions.map(transaction => (<Transaction key={transaction.id} transaction={transaction} />))}\r\n                \r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useState, useContext} from 'react'\r\nimport { GlobalContext } from '../context/GlobalState';\r\n\r\nexport const AddTransaction = () => {\r\n  const [text, setText] = useState('');\r\n  const [amount, setAmount] = useState(0);\r\n  const { addTransaction} = useContext(GlobalContext);\r\n\r\n\r\n  const onSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const newTransaction = {\r\n      id: Math.floor(Math.random() * 1000000000),\r\n      text,\r\n      amount: +amount\r\n    }\r\n\r\n    addTransaction(newTransaction);\r\n  }\r\n    return (\r\n        <div>\r\n            <h3>Add new transaction</h3>\r\n      <form onSubmit={onSubmit}>\r\n        <div className=\"form-control\">\r\n          <label htmlfor=\"text\">Text</label>\r\n          <input type=\"text\" value={text} onChange={(e) => setText(e.target.value) } placeholder=\"Enter text...\" />\r\n        </div>\r\n        <div className=\"form-control\">\r\n          <label htmlfor=\"amount\">Amount <br />\r\n            (negative - expense, positive - income)</label>\r\n          <input type=\"number\"  value={amount} onChange={(e) => setAmount(e.target.value) } placeholder=\"Enter amount...\" />\r\n            </div>\r\n            <button className=\"btn\">Add transaction</button>\r\n            </form>\r\n        </div>\r\n        \r\n    )\r\n}\r\n","import React from 'react';\nimport './App.css';\nimport { Header } from './components/Header';\nimport { Balance } from './components/Balance';\nimport { IncomeExpenses } from './components/IncomeExpenses';\nimport { TransactionList } from './components/TransactionList';\nimport { AddTransaction } from './components/AddTransaction';\nimport { GlobalProvider } from './context/GlobalState';\n\nfunction App() {\n  return (\n      <GlobalProvider>\n      <Header/>\n      <div className=\"container\">\n        <Balance />\n        <IncomeExpenses />\n        <TransactionList />\n        <AddTransaction />\n      </div>\n      </GlobalProvider>\n    \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}